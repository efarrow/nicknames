# Â© All rights reserved. Elaine Farrow, University of Edinburgh, United Kingdom, 2022

#######################################
# REQUIRED EXTERNALLY GENERATED FILES #
#######################################

# Data files
# external/messages_orig.csv
# external/student-names.csv

# Manually edited files, decribed below
# manual/names_manual.txt
# manual/names_full.txt
# manual/names_subset.txt
# manual/names_nicknames.txt
# manual/names_misspelled.txt
# manual/replacements_edits.txt

# Files generated by Textwash, cached
# cached/names_tw_1.txt
# cached/names_tw_2.txt
# cached/names_tw_3.txt
# cached/names_tw_4.txt
# cached/names_tw_5.txt
# cached/names_tw_6.txt
# cached/names_tw_7.txt

################
# PREPARE DATA #
################

# deal with duplicated quotation marks and normalise white space
python3 $NICKNAMES_DIR/clean_data.py external/messages_orig.csv messages_clean.csv

# sort data by session, topic, and time stamp
python3 $NICKNAMES_DIR/sort_data.py messages_clean.csv messages_sorted.csv

# generate new field: PARENT_USER_FIELD_NAME
python3 $NICKNAMES_DIR/generate_columns.py messages_sorted.csv messages_plus.csv

########################
# FIND NAMES: TEXTWASH #
########################

# NOTE: to run the Textwash name extraction, additional setup is needed
# Export the environment variable TEXTWASH_DIR pointing to the code dir
# Activate a conda environment that contains Textwash

# Find names in the messages using Textwash
# batch the operations to reduce memory requirements
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_1.txt --method textwash --limit 250 -c -q &
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_2.txt --method textwash --start 250 --limit 250 -c -q &
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_3.txt --method textwash --start 500 --limit 250 -c -q &
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_4.txt --method textwash --start 750 --limit 250 -c -q &
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_5.txt --method textwash --start 1000 --limit 250 -c -q &
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_6.txt --method textwash --start 1250 --limit 250 -c -q &
# python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_tw_7.txt --method textwash --start 1500 --limit 250 -c -q &

# Combine the names from Textwash, with and without counts
python3 $NICKNAMES_DIR/combine_names.py cached/names_tw_{1,2,3,4,5,6,7}.txt -c -q -o names_tw_counted.txt
python3 $NICKNAMES_DIR/combine_names.py names_tw_counted.txt -o names_tw.txt

# Optionally consider only the top name found by Textwash for each pseudonym
# python3 $NICKNAMES_DIR/combine_names.py names_tw_counted.txt --top 1 -o names_tw_top.txt

#####################
# FIND NAMES: REGEX #
#####################

# Find names in messages using regular expressions, with and without counts
python3 $NICKNAMES_DIR/find_names.py messages_plus.csv names_regex_counted.txt -c -q
python3 $NICKNAMES_DIR/combine_names.py names_regex_counted.txt -o names_regex.txt

# NOTE: manual editing is required here!
# Create names_manual.txt from names_regex_counted.txt
# Delete mistaken entries, add missed entries
# Use the counts to guide decisions, but leave blank for added entries

# Extract names and pseudonyms from the CSV class list
python3 $NICKNAMES_DIR/combine_names.py external/student-names.csv -o names_list.txt

# Find subset names, e.g., First/ First Last/ First Middle Last
python3 $NICKNAMES_DIR/split_names.py names_list.txt names_split.txt

# Combine manual list with the subset names from the class list
python3 $NICKNAMES_DIR/combine_names.py manual/names_manual.txt names_split.txt -o names_combined.txt

# Remove names that don't appear anywhere in the messages
python3 $NICKNAMES_DIR/filter_names.py messages_plus.csv names_combined.txt names_used_check.txt

# NOTE: more manual editing can be done here if wanted/ needed
# Create names_used.txt from names_used_check.txt
cp names_used_check.txt names_used.txt

####################
# SUBSTITUTE NAMES #
####################

# Replace user names by thread, counting actual replacements made
python3 $NICKNAMES_DIR/replace_names.py messages_plus.csv names_used.txt messages_redacted_topic.csv --by topic --used-names replacements_topic.txt -c -q

# Replace user names by session, counting actual replacements made
python3 $NICKNAMES_DIR/replace_names.py messages_plus.csv names_used.txt messages_redacted_session.csv --by session --used-names replacements_session.txt -c -q

# Replace user names across the full data set
python3 $NICKNAMES_DIR/replace_names.py messages_plus.csv names_used.txt messages_redacted_all.csv --by none --used-names replacements_full.txt -c -q

# Replacing by session worked best, so use that
cp replacements_session.txt replacements_all.txt
cp messages_redacted_session.csv messages_redacted_check.csv

# NOTE: manual editing is required here!
# Create messages_redacted.csv from messages_redacted_check.csv
# Create replacements_edits.txt to adjust counts in replacements_all.txt

##################
# POST HOC TESTS #
##################

# Adjust counts of replacements to match final redacted data
python3 $NICKNAMES_DIR/combine_names.py replacements_all.txt manual/replacements_edits.txt -c -q -o replacements.txt

# The file replacements.txt is the gold standard for comparing name extraction methods

###########
# TABLE 2 #
###########

python3 $NICKNAMES_DIR/filter_names.py messages_plus.csv names_split.txt names_class.txt
mkdir -p tables
rm -f tables/table2.tex

# Compare each approach against the gold standard, including multi-word names

# The regular expressions
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_regex.txt --summary 1 >> tables/table2.tex
# The class list
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_class.txt --summary 1 >> tables/table2.tex
# The TextWash model
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_tw.txt --summary 1 >> tables/table2.tex
# Regular expressions + class list
python3 $NICKNAMES_DIR/combine_names.py names_regex.txt names_class.txt -o names_regex_class.txt
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_regex_class.txt --summary 1 >> tables/table2.tex
# TextWash + class list
python3 $NICKNAMES_DIR/combine_names.py names_tw.txt names_class.txt -o names_tw_class.txt
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_tw_class.txt --summary 1 >> tables/table2.tex

###########
# TABLE 3 #
###########

python3 $NICKNAMES_DIR/combine_names.py replacements.txt -o single_word_replacements.txt -c -q -m
rm -f tables/table3.tex

# Compare each approach against the gold standard, after splitting multi-word names

# The regular expressions
python3 $NICKNAMES_DIR/combine_names.py names_regex.txt -o names_regex_divided.txt -m
python3 $NICKNAMES_DIR/compare_names.py single_word_replacements.txt names_regex_divided.txt --summary 1 >> tables/table3.tex
# The class list
python3 $NICKNAMES_DIR/combine_names.py names_class.txt -o names_class_divided.txt -m
python3 $NICKNAMES_DIR/compare_names.py single_word_replacements.txt names_class_divided.txt --summary 1 >> tables/table3.tex
# The TextWash model
python3 $NICKNAMES_DIR/combine_names.py names_tw.txt -o names_tw_divided.txt -m
python3 $NICKNAMES_DIR/compare_names.py single_word_replacements.txt names_tw_divided.txt --summary 1 >> tables/table3.tex
# Regular expressions + class list
python3 $NICKNAMES_DIR/combine_names.py names_regex_divided.txt names_class_divided.txt -o names_regex_class_divided.txt
python3 $NICKNAMES_DIR/compare_names.py single_word_replacements.txt names_regex_class_divided.txt --summary 1 >> tables/table3.tex
# TextWash + class list
python3 $NICKNAMES_DIR/combine_names.py names_tw_divided.txt names_class_divided.txt -o names_tw_class_divided.txt
python3 $NICKNAMES_DIR/compare_names.py single_word_replacements.txt names_tw_class_divided.txt --summary 1 >> tables/table3.tex

######################
# MISSED CONNECTIONS #
######################

# Examine missed connections more thoroughly
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_regex.txt -v

############################
# PREVALENCE OF NAME TYPES #
############################

# Split the found names into groups
python3 $NICKNAMES_DIR/filter_names.py messages_plus.csv names_list.txt names_full_check.txt
python3 $NICKNAMES_DIR/combine_names.py --subtract names_class.txt names_full_check.txt -o names_subset_check.txt
python3 $NICKNAMES_DIR/combine_names.py --subtract replacements.txt names_class.txt -o names_other_check.txt

# NOTE: manual editing is required here!
# Edit the full names and subset names
# Decide which remaining names are mispelled vs nicknames
# Create names_full.txt from names_full_check.txt
# Create names_subset.txt names_subset_check.txt
# Create names_misspelled.txt and names_nicknames.txt

# Find all the registered (official) names
python3 $NICKNAMES_DIR/combine_names.py manual/names_{full,subset}.txt -o names_official.txt
# Find all the known names
python3 $NICKNAMES_DIR/combine_names.py manual/names_{full,subset,nicknames,misspelled}.txt -o names_known.txt

# Cross-check: there are no remaining names!
python3 $NICKNAMES_DIR/combine_names.py replacements.txt --known-names names_known.txt
python3 $NICKNAMES_DIR/combine_names.py --subtract replacements.txt names_known.txt

###########
# TABLE 4 #
###########

rm -f tables/table4.tex

# Compare the names in each group against the gold standard, including multi-word names

# Registered (official) student names
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_official.txt --summary 2 >> tables/table4.tex
# Nicknames
python3 $NICKNAMES_DIR/compare_names.py replacements.txt manual/names_nicknames.txt --summary 2 >> tables/table4.tex
# Misspellings
python3 $NICKNAMES_DIR/compare_names.py replacements.txt manual/names_misspelled.txt --summary 2 >> tables/table4.tex
# Full student names
python3 $NICKNAMES_DIR/compare_names.py replacements.txt manual/names_full.txt --summary 2 >> tables/table4.tex
# Subset student names
python3 $NICKNAMES_DIR/compare_names.py replacements.txt manual/names_subset.txt --summary 2 >> tables/table4.tex
# All names
python3 $NICKNAMES_DIR/compare_names.py replacements.txt names_known.txt --summary 2 >> tables/table4.tex

################
# MISSPELLINGS #
################

# Count the misspellings found by each method

python3 $NICKNAMES_DIR/combine_names.py --subtract replacements.txt manual/names_misspelled.txt -o names_correct.txt
python3 $NICKNAMES_DIR/combine_names.py --subtract replacements.txt names_correct.txt -o names_misspelled_counted.txt -c -q

# Compare misspellings against regular expressions
python3 $NICKNAMES_DIR/compare_names.py names_misspelled_counted.txt names_regex.txt
# Compare misspellings against TextWash
python3 $NICKNAMES_DIR/compare_names.py names_misspelled_counted.txt names_tw.txt

#########
# CHART #
#########

# Generate chart of name distribution
mkdir -p charts
python $NICKNAMES_DIR/plot_names.py charts manual/names_{full,subset,nicknames,misspelled}.txt
